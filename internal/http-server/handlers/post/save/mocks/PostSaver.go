// Code generated by mockery v2.30.0. DO NOT EDIT.

package mocks

import (
	context "context"

	mock "github.com/stretchr/testify/mock"
)

// PostSaver is an autogenerated mock type for the PostSaver type
type PostSaver struct {
	mock.Mock
}

// SavePost provides a mock function with given fields: ctx, created_by, title, text, date_created
func (_m *PostSaver) SavePost(ctx context.Context, created_by string, title string, text string, date_created string) (int64, error) {
	ret := _m.Called(ctx, created_by, title, text, date_created)

	var r0 int64
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, string, string, string, string) (int64, error)); ok {
		return rf(ctx, created_by, title, text, date_created)
	}
	if rf, ok := ret.Get(0).(func(context.Context, string, string, string, string) int64); ok {
		r0 = rf(ctx, created_by, title, text, date_created)
	} else {
		r0 = ret.Get(0).(int64)
	}

	if rf, ok := ret.Get(1).(func(context.Context, string, string, string, string) error); ok {
		r1 = rf(ctx, created_by, title, text, date_created)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// NewPostSaver creates a new instance of PostSaver. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewPostSaver(t interface {
	mock.TestingT
	Cleanup(func())
}) *PostSaver {
	mock := &PostSaver{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
