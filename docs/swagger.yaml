basePath: /
definitions:
  like.Request:
    properties:
      id:
        type: integer
    type: object
  login.Request:
    properties:
      login:
        type: string
      password:
        type: string
    type: object
  models.DeleteError:
    properties:
      error:
        type: string
      status:
        type: string
    type: object
  models.DeleteSuccess:
    properties:
      status:
        type: string
    type: object
  models.LikeError:
    properties:
      error:
        type: string
      status:
        type: string
    type: object
  models.LikeSuccess:
    properties:
      status:
        type: string
    type: object
  models.LoginError:
    properties:
      error:
        type: string
      status:
        type: string
    type: object
  models.LoginSuccess:
    properties:
      status:
        type: string
      token:
        type: string
    type: object
  models.PostsError:
    properties:
      error:
        type: string
      status:
        type: string
    type: object
  models.PostsSuccess:
    properties:
      message:
        type: string
      posts:
        items:
          $ref: '#/definitions/types.Post'
        type: array
      status:
        type: string
    type: object
  models.RegisterError:
    properties:
      error:
        type: string
      status:
        type: string
    type: object
  models.RegisterSuccess:
    properties:
      id:
        type: integer
      status:
        type: string
    type: object
  models.SaveError:
    properties:
      error:
        type: string
      status:
        type: string
    type: object
  models.SaveSuccess:
    properties:
      id:
        type: integer
      status:
        type: string
    type: object
  models.UnlikeError:
    properties:
      error:
        type: string
      status:
        type: string
    type: object
  models.UnlikeSuccess:
    properties:
      status:
        type: string
    type: object
  models.UpdateError:
    properties:
      error:
        type: string
      status:
        type: string
    type: object
  models.UpdateSuccess:
    properties:
      status:
        type: string
    type: object
  register.Request:
    properties:
      login:
        type: string
      password:
        type: string
    type: object
  remove.Request:
    properties:
      id:
        type: integer
    type: object
  save.Request:
    properties:
      text:
        type: string
      title:
        type: string
    type: object
  types.Post:
    properties:
      created_at:
        type: string
      created_by:
        type: string
      id:
        type: integer
      liked_by:
        items:
          type: string
        type: array
      likes:
        type: integer
      text:
        type: string
      title:
        type: string
      updated_at:
        type: string
    type: object
  unlike.Request:
    properties:
      id:
        type: integer
    type: object
  update.Request:
    properties:
      id:
        type: integer
      text:
        type: string
      title:
        type: string
    type: object
host: localhost:8081
info:
  contact: {}
  description: API of a social media
  title: Go Blog Api
  version: "1.0"
paths:
  /auth/login:
    post:
      consumes:
      - application/json
      description: login
      operationId: login
      parameters:
      - description: account info
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/login.Request'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.LoginSuccess'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.LoginError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.LoginError'
      summary: Login
      tags:
      - auth
  /auth/register:
    post:
      consumes:
      - application/json
      description: register
      operationId: register
      parameters:
      - description: account info
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/register.Request'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.RegisterSuccess'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.RegisterError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.RegisterError'
      summary: Register
      tags:
      - auth
  /post/create:
    post:
      consumes:
      - application/json
      description: create post
      operationId: create
      parameters:
      - description: post info
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/save.Request'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.SaveSuccess'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.SaveError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.SaveError'
      security:
      - ApiKeyAuth: []
      summary: Create
      tags:
      - post
  /post/delete:
    delete:
      consumes:
      - application/json
      description: delete post
      operationId: delete
      parameters:
      - description: id of a post to be deleted
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/remove.Request'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.DeleteSuccess'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.DeleteError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.DeleteError'
      security:
      - ApiKeyAuth: []
      summary: Delete
      tags:
      - post
  /post/like:
    put:
      consumes:
      - application/json
      description: like post
      operationId: like
      parameters:
      - description: id of post to be liked
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/like.Request'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.LikeSuccess'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.LikeError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.LikeError'
      security:
      - ApiKeyAuth: []
      summary: Like
      tags:
      - post
  /post/unlike:
    put:
      consumes:
      - application/json
      description: unlike post
      operationId: unlike
      parameters:
      - description: id of post to be unliked
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/unlike.Request'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.UnlikeSuccess'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.UnlikeError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.UnlikeError'
      security:
      - ApiKeyAuth: []
      summary: Unlike
      tags:
      - post
  /post/update:
    patch:
      consumes:
      - application/json
      description: update post
      operationId: update
      parameters:
      - description: id of a post and info to be updated
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/update.Request'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.UpdateSuccess'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.UpdateError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.UpdateError'
      security:
      - ApiKeyAuth: []
      summary: Update
      tags:
      - post
  /user/{user}:
    get:
      consumes:
      - application/json
      description: get posts of a user
      operationId: get
      parameters:
      - description: username of a user
        in: path
        name: user
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.PostsSuccess'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.PostsError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.PostsError'
      summary: Get posts
      tags:
      - user
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
